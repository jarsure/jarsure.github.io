<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Css on jarsure's blog</title><link>/categories/css/</link><description>Recent content in Css on jarsure's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 12 Aug 2024 17:41:09 +0800</lastBuildDate><atom:link href="/categories/css/index.xml" rel="self" type="application/rss+xml"/><item><title>Flexbox简介</title><link>/p/flexbox%E7%AE%80%E4%BB%8B/</link><pubDate>Mon, 12 Aug 2024 17:41:09 +0800</pubDate><guid>/p/flexbox%E7%AE%80%E4%BB%8B/</guid><description>&lt;img src="/p/flexbox%E7%AE%80%E4%BB%8B/ti.jpg" alt="Featured image of post Flexbox简介" />&lt;h2 id="flexbox-简介">Flexbox 简介
&lt;/h2>&lt;p>Flexbox（Flexible Box）是一种 CSS 布局模式，旨在更好地排列和对齐容器中的子元素，特别是在容器的大小未知或动态变化时。Flexbox 布局的主要思想是让容器的子元素能够“弹性”地填充空间，并且能够轻松地调整元素之间的间距。&lt;/p>
&lt;h3 id="flex-容器与子元素">Flex 容器与子元素
&lt;/h3>&lt;p>要使用 Flexbox 布局，首先需要将容器设为 &lt;code>flex&lt;/code> 容器。容器的子元素会自动成为 &lt;code>flex&lt;/code> 项目（flex items）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="容器属性">容器属性
&lt;/h2>&lt;h3 id="1-flex-direction">1. &lt;code>flex-direction&lt;/code>
&lt;/h3>&lt;p>决定主轴（主轴是定义子元素排列方向的轴）的方向。&lt;/p>
&lt;ul>
&lt;li>&lt;code>row&lt;/code> (默认): 子元素按行排列（从左到右）。&lt;/li>
&lt;li>&lt;code>row-reverse&lt;/code>: 子元素按行反向排列（从右到左）。&lt;/li>
&lt;li>&lt;code>column&lt;/code>: 子元素按列排列（从上到下）。&lt;/li>
&lt;li>&lt;code>column-reverse&lt;/code>: 子元素按列反向排列（从下到上）。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-direction: row; /* or row-reverse, column, column-reverse */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-flex-wrap">2. &lt;code>flex-wrap&lt;/code>
&lt;/h3>&lt;p>决定子元素是否可以在容器中换行。&lt;/p>
&lt;ul>
&lt;li>&lt;code>nowrap&lt;/code> (默认): 所有子元素保持在同一行或列中，不换行。&lt;/li>
&lt;li>&lt;code>wrap&lt;/code>: 子元素在必要时换行。&lt;/li>
&lt;li>&lt;code>wrap-reverse&lt;/code>: 子元素在必要时换行，但换行的顺序反向。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-wrap: wrap; /* or nowrap, wrap-reverse */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-justify-content">3. &lt;code>justify-content&lt;/code>
&lt;/h3>&lt;p>控制子元素在主轴方向上的对齐方式。&lt;/p>
&lt;ul>
&lt;li>&lt;code>flex-start&lt;/code> (默认): 子元素靠起始端对齐。&lt;/li>
&lt;li>&lt;code>flex-end&lt;/code>: 子元素靠末端对齐。&lt;/li>
&lt;li>&lt;code>center&lt;/code>: 子元素在主轴上居中对齐。&lt;/li>
&lt;li>&lt;code>space-between&lt;/code>: 子元素之间平均分配空间，首个元素靠起始端，最后一个元素靠末端对齐。将子元素沿主轴均匀分布，每个子元素之间的间距相等，但是第一个子元素与容器的起始端之间没有间距，最后一个子元素与容器的末尾端之间也没有间距。这意味着空白空间仅在子元素之间进行分配。&lt;/li>
&lt;li>&lt;code>space-around&lt;/code>: 子元素之间以及子元素与容器边缘之间的空间均匀分布。&lt;/li>
&lt;li>&lt;code>space-evenly&lt;/code>: 将子元素沿主轴均匀分布，每个子元素之间的间距相等，同时第一个子元素与容器的起始端和最后一个子元素与容器的末尾端之间的间距也相等。这意味着空白空间将平均分配给所有子元素。&lt;/li>
&lt;/ul>
&lt;p>space-between和space-evenly的区别: 简单来说，两者的区别在于对容器两端的间距处理。&lt;code>space-evenly&lt;/code> 会在容器两端和子元素之间均匀分配空白空间，而 &lt;code>space-between&lt;/code> 只在子元素之间均匀分配空白空间，容器两端没有额外的间距。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> justify-content: center; /* or flex-start, flex-end, space-between, space-around */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-align-items">4. &lt;code>align-items&lt;/code>
&lt;/h3>&lt;p>控制子元素在交叉轴（与主轴垂直的轴）方向上的对齐方式。&lt;/p>
&lt;ul>
&lt;li>&lt;code>stretch&lt;/code> (默认): 子元素在交叉轴上拉伸以填充容器。&lt;/li>
&lt;li>&lt;code>flex-start&lt;/code>: 子元素靠交叉轴的起始端对齐。&lt;/li>
&lt;li>&lt;code>flex-end&lt;/code>: 子元素靠交叉轴的末端对齐。&lt;/li>
&lt;li>&lt;code>center&lt;/code>: 子元素在交叉轴上居中对齐。&lt;/li>
&lt;li>&lt;code>baseline&lt;/code>: 子元素基于其内容的基线对齐。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> align-items: center; /* or flex-start, flex-end, stretch, baseline */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="5-align-content">5. &lt;code>align-content&lt;/code>
&lt;/h3>&lt;p>控制多行子元素在交叉轴上的对齐方式。适用于有多行子元素的情况。&lt;/p>
&lt;ul>
&lt;li>&lt;code>stretch&lt;/code> (默认): 各行均匀拉伸以填充容器。&lt;/li>
&lt;li>&lt;code>flex-start&lt;/code>: 各行靠交叉轴的起始端对齐。&lt;/li>
&lt;li>&lt;code>flex-end&lt;/code>: 各行靠交叉轴的末端对齐。&lt;/li>
&lt;li>&lt;code>center&lt;/code>: 各行在交叉轴上居中对齐。&lt;/li>
&lt;li>&lt;code>space-between&lt;/code>: 各行之间的空间平均分配，第一行靠起始端，最后一行靠末端。&lt;/li>
&lt;li>&lt;code>space-around&lt;/code>: 各行之间以及与容器边缘之间的空间均匀分布。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> align-content: center; /* or flex-start, flex-end, space-between, space-around, stretch */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="子元素属性">子元素属性
&lt;/h2>&lt;h3 id="1-order">1. &lt;code>order&lt;/code>
&lt;/h3>&lt;p>控制子元素在容器中的排列顺序，默认值为 &lt;code>0&lt;/code>。可以设置正值或负值来调整顺序。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.item {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> order: 1; /* Change the order of the item */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-flex-grow">2. &lt;code>flex-grow&lt;/code>
&lt;/h3>&lt;p>定义子元素的可伸展比例，默认值为 &lt;code>0&lt;/code>，表示子元素不伸展。大于 &lt;code>0&lt;/code> 的值表示子元素会根据剩余空间进行伸展。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.item {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-grow: 1; /* Item will grow to fill the space */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-flex-shrink">3. &lt;code>flex-shrink&lt;/code>
&lt;/h3>&lt;p>定义子元素的收缩比例，默认值为 &lt;code>1&lt;/code>，表示子元素可以收缩。设置为 &lt;code>0&lt;/code> 则表示子元素不会收缩。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.item {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-shrink: 1; /* Item will shrink if needed */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-flex-basis">4. &lt;code>flex-basis&lt;/code>
&lt;/h3>&lt;p>设置子元素的初始主轴尺寸。可以是长度单位（如 &lt;code>px&lt;/code>, &lt;code>em&lt;/code>）或 &lt;code>auto&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.item {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-basis: 100px; /* Initial size of the item */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="5-align-self">5. &lt;code>align-self&lt;/code>
&lt;/h3>&lt;p>允许子元素单独调整在交叉轴上的对齐方式，覆盖 &lt;code>align-items&lt;/code> 属性。&lt;/p>
&lt;ul>
&lt;li>&lt;code>auto&lt;/code> (默认): 继承 &lt;code>align-items&lt;/code> 的值。&lt;/li>
&lt;li>其他值同 &lt;code>align-items&lt;/code>。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.item {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> align-self: flex-end; /* or flex-start, center, baseline, stretch */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="常见布局示例">常见布局示例
&lt;/h2>&lt;h3 id="1-水平居中">1. 水平居中
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> justify-content: center;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> align-items: center;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> height: 100vh; /* Full viewport height */
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-垂直居中">2. 垂直居中
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-direction: column;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> justify-content: center;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> height: 100vh;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-等间距布局">3. 等间距布局
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> justify-content: space-between;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-响应式网格布局">4. 响应式网格布局
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">css复制代码.container {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display: flex;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-wrap: wrap;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> justify-content: space-around;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.item {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flex-basis: calc(33.333% - 20px);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> margin: 10px;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="结论">结论
&lt;/h2>&lt;p>Flexbox 是一种功能强大且直观的布局工具，适用于各种响应式布局和复杂的对齐需求。通过结合使用容器和子元素的属性，可以创建灵活、可调整的布局。希望这份文档对你理解和使用 Flexbox 有所帮助！&lt;/p></description></item></channel></rss>